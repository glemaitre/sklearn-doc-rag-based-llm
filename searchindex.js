Search.setIndex({"docnames": ["about", "auto_examples/index", "index", "install", "references/embedding", "references/generated/ragger_duck.embedding.SentenceTransformer", "references/generated/ragger_duck.prompt.APIPromptingStrategy", "references/generated/ragger_duck.retrieval.BM25Retriever", "references/generated/ragger_duck.retrieval.RetrieverReranker", "references/generated/ragger_duck.retrieval.SemanticRetriever", "references/generated/ragger_duck.scraping.APIDocExtractor", "references/generated/ragger_duck.scraping.APINumPyDocExtractor", "references/index", "references/prompt", "references/retrieval", "references/scraping", "user_guide", "whats_new", "whats_new/v0.1"], "filenames": ["about.rst", "auto_examples/index.rst", "index.rst", "install.rst", "references/embedding.rst", "references/generated/ragger_duck.embedding.SentenceTransformer.rst", "references/generated/ragger_duck.prompt.APIPromptingStrategy.rst", "references/generated/ragger_duck.retrieval.BM25Retriever.rst", "references/generated/ragger_duck.retrieval.RetrieverReranker.rst", "references/generated/ragger_duck.retrieval.SemanticRetriever.rst", "references/generated/ragger_duck.scraping.APIDocExtractor.rst", "references/generated/ragger_duck.scraping.APINumPyDocExtractor.rst", "references/index.rst", "references/prompt.rst", "references/retrieval.rst", "references/scraping.rst", "user_guide.rst", "whats_new.rst", "whats_new/v0.1.rst"], "titles": ["About us", "Examples", "Ragger Duck documentation", "Getting Started", "Embedding", "SentenceTransformer", "APIPromptingStrategy", "BM25Retriever", "RetrieverReranker", "SemanticRetriever", "APIDocExtractor", "APINumPyDocExtractor", "API reference", "Prompt", "Retrieval", "Scraping the documentation", "User guide: contents", "Release history", "Version 0.1"], "terms": {"thi": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12], "i": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 16], "sundai": [0, 3], "afternoon": [0, 3], "project": [0, 2, 3, 16], "One": [1, 16], "dai": 1, "write": 1, "some": [1, 2, 16], "right": [1, 8], "now": 1, "someth": 1, "locat": [1, 3], "script": [1, 3], "folder": [1, 3, 10, 11], "date": 2, "dec": 2, "24": 2, "2023": 2, "version": [2, 5, 10, 11], "us": [2, 5, 6, 7, 8, 9, 10, 11, 16], "link": [2, 3], "sourc": [2, 3, 10, 11], "repositori": [2, 3, 5], "issu": 2, "idea": [2, 16], "sklearn": [2, 7], "The": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16], "provid": [2, 3, 16], "set": [2, 5, 6, 7, 8, 9, 10, 11], "tool": 2, "build": [2, 9, 16], "rag": 2, "answer": [2, 6, 16], "question": [2, 16], "about": 2, "scikit": [2, 5, 9, 15], "learn": [2, 5, 9, 15], "librari": [2, 9], "get": [2, 5, 6, 7, 8, 9, 10, 11, 16], "start": 2, "check": [2, 3, 5, 6, 7, 8, 9, 10, 11], "out": 2, "guid": [2, 5, 6, 7, 8, 9, 10, 11], "instal": [2, 3], "extra": 2, "inform": [2, 5, 6, 7, 8, 9, 10, 11, 16], "new": 2, "contribut": 2, "also": 2, "To": [2, 3], "guidelin": 2, "user": [2, 5, 6, 7, 8, 9, 10, 11], "depth": 2, "kei": [2, 5], "concept": 2, "background": 2, "explan": 2, "api": [2, 3, 5, 6, 9, 10, 11], "refer": [2, 3, 16], "contain": [2, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16], "detail": 2, "descript": 2, "avail": [2, 3, 16], "exampl": [2, 5, 10, 11], "galleri": 2, "good": 2, "place": 2, "see": [2, 5, 10, 11], "action": 2, "select": 2, "an": [2, 3, 5, 6, 9, 10, 11, 16], "dive": 2, "sinc": [3, 16], "yet": 3, "wai": [3, 16], "packag": [3, 12], "easi": 3, "dirti": 3, "add": 3, "your": 3, "path": [3, 5, 10, 11], "moment": 3, "import": 3, "sy": 3, "path_to_packag": 3, "ragger_duck": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15], "append": 3, "you": 3, "can": [3, 5, 10, 11, 16], "file": 3, "requir": 3, "txt": 3, "we": [3, 6, 9, 16], "don": [3, 16], "t": [3, 16], "gpu": [3, 5], "enabl": 3, "eas": 3, "deploy": 3, "reli": [3, 16], "pixi": 3, "follow": [3, 5, 6, 8, 9], "In": [3, 16, 17, 18], "latest": 3, "stage": 3, "charg": 3, "creat": [3, 5, 9], "python": 3, "environ": 3, "Then": [3, 16], "step": [3, 8], "current": 3, "onli": [3, 5, 10, 11, 16], "support": [3, 6], "singl": [3, 5], "so": [3, 5, 6, 7, 8, 9, 10, 11], "cpu": [3, 5, 10], "If": [3, 5, 6, 7, 8, 9, 10, 11, 16], "want": 3, "need": [3, 16], "yourself": 3, "first": [3, 5, 6], "have": [3, 5, 6, 7, 8, 9, 10, 11, 16], "html": [3, 16], "clone": 3, "doc": 3, "_build": 3, "stabl": 3, "modul": [3, 4, 5, 15, 16], "gener": 3, "search": [3, 6, 7, 8, 16], "context": [3, 6, 8, 16], "modifi": 3, "configur": [3, 5, 10, 11], "py": [3, 5, 10, 11], "specifi": 3, "For": 3, "let": 3, "other": 3, "variabl": 3, "run": [3, 10], "command": 3, "from": [3, 5, 6, 7, 8, 9, 10, 11, 16], "root": 3, "llm": [3, 6, 16], "test": 3, "purpos": 3, "mistral": 3, "7b": 3, "instruct": [3, 6], "v0": 3, "1": [3, 7, 9], "q6_k": 3, "gguf": 3, "befor": 3, "app": 3, "default": [3, 5, 6, 7, 8, 9, 10, 11], "access": 3, "address": 3, "http": 3, "localhost": 3, "8123": 3, "function": [4, 10, 11, 15, 16], "emb": [4, 5, 9], "transform": [4, 5, 7, 9, 10, 11, 16], "allow": 4, "text": [4, 5, 7, 10, 11], "class": [5, 6, 7, 8, 9, 10, 11, 16], "embed": [5, 7, 9, 12, 16], "model_name_or_path": 5, "none": [5, 7, 8, 9, 10, 11], "devic": 5, "cache_fold": 5, "use_auth_token": 5, "batch_siz": 5, "32": 5, "show_progress_bar": 5, "true": [5, 6, 7, 8, 9, 10, 11], "sentenc": [5, 9, 16], "thin": 5, "wrapper": 5, "around": 5, "sentence_transform": [5, 8], "thu": 5, "insid": 5, "pipelin": [5, 6, 7, 8, 9, 10, 11], "paramet": [5, 6, 7, 8, 9, 10, 11, 16], "str": [5, 7, 8, 9], "filepath": 5, "disc": 5, "load": [5, 16], "model": [5, 6, 16], "tri": 5, "download": [5, 16], "pre": [5, 16], "train": [5, 7, 8, 9, 16], "fail": 5, "construct": 5, "huggingfac": [5, 16], "name": [5, 6, 7, 8, 9, 10, 11, 16], "iter": 5, "nn": 5, "custom": 5, "scratch": 5, "e": 5, "g": 5, "cuda": 5, "mp": 5, "should": [5, 6], "comput": [5, 7, 8, 9], "store": 5, "bool": [5, 6, 7, 8, 9, 10, 11], "authent": 5, "token": 5, "privat": 5, "int": [5, 7, 8, 9, 10], "batch": 5, "size": [5, 10, 16], "dure": [5, 16], "whether": [5, 8], "show": 5, "progress": [5, 17, 18], "bar": 5, "method": [5, 6, 7, 8, 9, 10, 11], "fit": [5, 7, 8, 9, 10, 11], "x": [5, 7, 8, 9, 10, 11], "y": [5, 7, 8, 9, 10, 11], "No": [5, 10, 11], "op": [5, 10, 11], "oper": [5, 10, 11], "valid": [5, 10, 11], "ignor": [5, 7, 8, 9, 10, 11], "return": [5, 6, 7, 8, 9, 10, 11], "self": [5, 6, 7, 8, 9, 10, 11], "estim": [5, 6, 7, 8, 9, 10, 11, 16], "fit_transform": [5, 10, 11], "fit_param": [5, 10, 11], "data": [5, 7, 8, 9, 10, 11], "option": [5, 10, 11], "arrai": [5, 10, 11], "like": [5, 10, 11], "shape": [5, 7, 9, 10, 11], "n_sampl": [5, 10, 11], "n_featur": [5, 7, 9, 10, 11], "input": [5, 7, 8, 9, 10, 11], "sampl": [5, 10, 11], "n_output": [5, 10, 11], "target": [5, 10, 11], "valu": [5, 6, 7, 8, 9, 10, 11], "unsupervis": [5, 10, 11], "dict": [5, 6, 7, 8, 9, 10, 11], "addit": [5, 10, 11], "x_new": [5, 10, 11], "ndarrai": [5, 7, 9, 10, 11], "n_features_new": [5, 10, 11], "get_metadata_rout": [5, 6, 7, 8, 9, 10, 11], "metadata": [5, 6, 7, 8, 9, 10, 11], "rout": [5, 6, 7, 8, 9, 10, 11], "object": [5, 6, 7, 8, 9, 10, 11], "pleas": [5, 6, 7, 8, 9, 10, 11], "how": [5, 6, 7, 8, 9, 10, 11], "mechan": [5, 6, 7, 8, 9, 10, 11], "work": [5, 6, 7, 8, 9, 10, 11], "metadatarequest": [5, 6, 7, 8, 9, 10, 11], "A": [5, 6, 7, 8, 9, 10, 11], "encapsul": [5, 6, 7, 8, 9, 10, 11], "get_param": [5, 6, 7, 8, 9, 10, 11], "deep": [5, 6, 7, 8, 9, 10, 11], "subobject": [5, 6, 7, 8, 9, 10, 11], "ar": [5, 6, 7, 8, 9, 10, 11, 16], "param": [5, 6, 7, 8, 9, 10, 11], "map": [5, 6, 7, 8, 9, 10, 11], "set_output": [5, 10, 11], "output": [5, 10, 11], "sphx_glr_auto_examples_miscellaneous_plot_set_output": [5, 10, 11], "panda": [5, 10, 11], "format": [5, 10, 11, 16], "datafram": [5, 10, 11], "unchang": [5, 10, 11], "instanc": [5, 6, 7, 8, 9, 10, 11], "set_param": [5, 6, 7, 8, 9, 10, 11], "simpl": [5, 6, 7, 8, 9, 10, 11, 16], "well": [5, 6, 7, 8, 9, 10, 11], "nest": [5, 6, 7, 8, 9, 10, 11], "latter": [5, 6, 7, 8, 9, 10, 11], "form": [5, 6, 7, 8, 9, 10, 11], "compon": [5, 6, 7, 8, 9, 10, 11], "__": [5, 6, 7, 8, 9, 10, 11], "": [5, 6, 7, 8, 9, 10, 11], "possibl": [5, 6, 7, 8, 9, 10, 11], "updat": [5, 6, 7, 8, 9, 10, 11], "each": [5, 6, 7, 8, 9, 10, 11, 16], "vector": [5, 7, 16], "length": 5, "n_sentenc": [5, 7, 9], "list": [5, 7, 8, 9, 10, 11], "dictionari": [5, 10, 11], "embedding_s": 5, "prompt": [6, 12], "api_retriev": 6, "strategi": [6, 16], "relat": 6, "queri": [6, 7, 8, 9, 16], "retriev": [6, 7, 8, 9, 12], "lexic": [6, 7, 8], "extract": [6, 10, 11, 16], "keyword": 6, "them": 6, "specif": [6, 8, 16], "full": [6, 12], "semant": [6, 8, 9], "doe": 6, "onc": [6, 16], "request": [6, 16], "languag": [6, 16], "expect": [6, 9, 16], "implement": [6, 16], "__call__": 6, "take": 6, "respons": 6, "It": [6, 11], "base": [6, 7, 8], "count_vector": 7, "top_k": [7, 9], "b": 7, "0": 7, "75": 7, "k1": 7, "6": 7, "k": [7, 9], "nearest": [7, 9, 16], "neighbor": [7, 9, 16], "bm25": 7, "count": 7, "term": 7, "document": [7, 8, 9, 10, 11, 12], "feature_extract": 7, "countvector": [7, 16], "number": [7, 8, 9, 10], "attribut": [7, 9, 10], "x_fit_": [7, 9], "x_embedded_": [7, 9], "vocabulari": [7, 8, 16], "idf": [7, 8, 16], "most": [7, 8, 9], "relev": [7, 8, 9], "semantic_retriev": 8, "lexical_retriev": 8, "cross_encod": 8, "min_top_k": 8, "max_top_k": 8, "threshold": 8, "drop_dupl": 8, "hybrid": 8, "cross": [8, 16], "encod": [8, 16], "rerank": 8, "crossencod": 8, "result": [8, 16], "minimum": 8, "less": 8, "than": [8, 16], "maximum": 8, "all": 8, "float": 8, "filter": 8, "score": [8, 16], "note": 8, "drop": 8, "duplic": 8, "done": 8, "after": 8, "lexical_queri": 8, "semantic_queri": 8, "index": 9, "faiss": [9, 16], "inner": 9, "product": 9, "cosin": 9, "similar": [9, 16], "mean": 9, "normal": 9, "scrape": [10, 11, 12], "chunk_siz": [10, 16], "300": 10, "chunk_overlap": [10, 16], "50": 10, "n_job": 10, "process": [10, 11], "chunk": [10, 16], "split": [10, 16], "overlap": 10, "between": [10, 16], "two": [10, 16], "consecut": 10, "job": 10, "parallel": 10, "core": 10, "text_splitter_": 10, "langchain": 10, "text_splitt": 10, "recursivecharactertextsplitt": 10, "splitter": 10, "pathlib": [10, 11], "numpydoc": [11, 16], "templat": 11, "apidocextractor": [12, 16], "apinumpydocextractor": [12, 16], "sentencetransform": [12, 16], "bm25retriev": [12, 16], "retrieverrerank": [12, 16], "semanticretriev": [12, 16], "apipromptingstrategi": [12, 16], "websit": [15, 16], "meaning": 16, "scraper": 16, "page": 16, "main": 16, "section": 16, "further": 16, "smaller": 16, "more": 16, "advanc": 16, "inde": 16, "pars": 16, "differ": 16, "while": 16, "control": 16, "thei": 16, "alwai": 16, "hope": 16, "remov": 16, "ambigu": 16, "could": 16, "exist": 16, "when": 16, "without": 16, "ani": 16, "much": 16, "faster": 16, "differenti": 16, "type": 16, "exact": 16, "match": 16, "tf": 16, "weight": 16, "scheme": 16, "seen": 16, "flexibl": 16, "space": 16, "databas": 16, "closest": 16, "given": 16, "approxim": 16, "algorithm": 16, "As": 16, "both": 16, "make": 16, "our": 16, "case": 16, "microsoft": 16, "bing": 16, "pair": 16, "larg": 16}, "objects": {"ragger_duck": [[4, 0, 0, "-", "embedding"], [13, 0, 0, "-", "prompt"], [14, 0, 0, "-", "retrieval"], [15, 0, 0, "-", "scraping"]], "ragger_duck.embedding": [[5, 1, 1, "", "SentenceTransformer"]], "ragger_duck.embedding.SentenceTransformer": [[5, 2, 1, "", "fit"], [5, 2, 1, "", "fit_transform"], [5, 2, 1, "", "get_metadata_routing"], [5, 2, 1, "", "get_params"], [5, 2, 1, "", "set_output"], [5, 2, 1, "", "set_params"], [5, 2, 1, "", "transform"]], "ragger_duck.prompt": [[6, 1, 1, "", "APIPromptingStrategy"]], "ragger_duck.prompt.APIPromptingStrategy": [[6, 2, 1, "", "get_metadata_routing"], [6, 2, 1, "", "get_params"], [6, 2, 1, "", "set_params"]], "ragger_duck.retrieval": [[7, 1, 1, "", "BM25Retriever"], [8, 1, 1, "", "RetrieverReranker"], [9, 1, 1, "", "SemanticRetriever"]], "ragger_duck.retrieval.BM25Retriever": [[7, 2, 1, "", "fit"], [7, 2, 1, "", "get_metadata_routing"], [7, 2, 1, "", "get_params"], [7, 2, 1, "", "query"], [7, 2, 1, "", "set_params"]], "ragger_duck.retrieval.RetrieverReranker": [[8, 2, 1, "", "fit"], [8, 2, 1, "", "get_metadata_routing"], [8, 2, 1, "", "get_params"], [8, 2, 1, "", "query"], [8, 2, 1, "", "set_params"]], "ragger_duck.retrieval.SemanticRetriever": [[9, 2, 1, "", "fit"], [9, 2, 1, "", "get_metadata_routing"], [9, 2, 1, "", "get_params"], [9, 2, 1, "", "query"], [9, 2, 1, "", "set_params"]], "ragger_duck.scraping": [[10, 1, 1, "", "APIDocExtractor"], [11, 1, 1, "", "APINumPyDocExtractor"]], "ragger_duck.scraping.APIDocExtractor": [[10, 2, 1, "", "fit"], [10, 2, 1, "", "fit_transform"], [10, 2, 1, "", "get_metadata_routing"], [10, 2, 1, "", "get_params"], [10, 2, 1, "", "set_output"], [10, 2, 1, "", "set_params"], [10, 2, 1, "", "transform"]], "ragger_duck.scraping.APINumPyDocExtractor": [[11, 2, 1, "", "fit"], [11, 2, 1, "", "fit_transform"], [11, 2, 1, "", "get_metadata_routing"], [11, 2, 1, "", "get_params"], [11, 2, 1, "", "set_output"], [11, 2, 1, "", "set_params"], [11, 2, 1, "", "transform"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"]}, "titleterms": {"about": 0, "u": 0, "exampl": 1, "ragger": [2, 3], "duck": [2, 3], "document": [2, 3, 15, 16], "get": 3, "start": 3, "us": 3, "librari": 3, "deploi": 3, "web": 3, "consol": 3, "build": 3, "scikit": 3, "learn": 3, "train": 3, "semant": [3, 16], "lexic": [3, 16], "retriev": [3, 14, 16], "download": 3, "larg": 3, "languag": 3, "model": 3, "launch": 3, "embed": 4, "sentencetransform": 5, "apipromptingstrategi": 6, "bm25retriev": 7, "retrieverrerank": 8, "semanticretriev": 9, "apidocextractor": 10, "apinumpydocextractor": 11, "api": [12, 16], "refer": 12, "prompt": [13, 16], "scrape": [15, 16], "user": 16, "guid": 16, "rerank": 16, "merg": 16, "releas": 17, "histori": 17, "version": [17, 18], "0": [17, 18], "1": [17, 18], "changelog": [17, 18]}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"About us": [[0, "about-us"]], "Examples": [[1, "examples"]], "Ragger Duck documentation": [[2, "ragger-duck-documentation"]], "Getting Started": [[3, "getting-started"]], "Use the Ragger Duck library": [[3, "use-the-ragger-duck-library"]], "Deploy Ragger Duck Web Console": [[3, "deploy-ragger-duck-web-console"]], "Build the scikit-learn documentation": [[3, "build-the-scikit-learn-documentation"]], "Train the semantic and lexical retrievers": [[3, "train-the-semantic-and-lexical-retrievers"]], "Download the Large Language Model": [[3, "download-the-large-language-model"]], "Launch the Web Console": [[3, "launch-the-web-console"]], "Embedding": [[4, "module-ragger_duck.embedding"]], "SentenceTransformer": [[5, "sentencetransformer"]], "APIPromptingStrategy": [[6, "apipromptingstrategy"]], "BM25Retriever": [[7, "bm25retriever"]], "RetrieverReranker": [[8, "retrieverreranker"]], "SemanticRetriever": [[9, "semanticretriever"]], "APIDocExtractor": [[10, "apidocextractor"]], "APINumPyDocExtractor": [[11, "apinumpydocextractor"]], "API reference": [[12, "api-reference"]], "Prompt": [[13, "module-ragger_duck.prompt"]], "Retrieval": [[14, "module-ragger_duck.retrieval"]], "Scraping the documentation": [[15, "module-ragger_duck.scraping"]], "User Guide": [[16, "user-guide"]], "Scraping": [[16, "scraping"]], "Retriever": [[16, "retriever"]], "Lexical retrievers": [[16, "lexical-retrievers"]], "Semantical retrievers": [[16, "semantical-retrievers"]], "Reranker: merging lexical and semantical retrievers": [[16, "reranker-merging-lexical-and-semantical-retrievers"]], "Prompting": [[16, "prompting"]], "Prompting for API documentation": [[16, "prompting-for-api-documentation"]], "Release history": [[17, "release-history"]], "Version 0.1": [[17, "version-0-1"], [18, "version-0-1"]], "Changelog": [[17, "changelog"], [18, "changelog"]]}, "indexentries": {"module": [[4, "module-ragger_duck.embedding"], [13, "module-ragger_duck.prompt"], [14, "module-ragger_duck.retrieval"], [15, "module-ragger_duck.scraping"]], "ragger_duck.embedding": [[4, "module-ragger_duck.embedding"]], "sentencetransformer (class in ragger_duck.embedding)": [[5, "ragger_duck.embedding.SentenceTransformer"]], "fit() (ragger_duck.embedding.sentencetransformer method)": [[5, "ragger_duck.embedding.SentenceTransformer.fit"]], "fit_transform() (ragger_duck.embedding.sentencetransformer method)": [[5, "ragger_duck.embedding.SentenceTransformer.fit_transform"]], "get_metadata_routing() (ragger_duck.embedding.sentencetransformer method)": [[5, "ragger_duck.embedding.SentenceTransformer.get_metadata_routing"]], "get_params() (ragger_duck.embedding.sentencetransformer method)": [[5, "ragger_duck.embedding.SentenceTransformer.get_params"]], "set_output() (ragger_duck.embedding.sentencetransformer method)": [[5, "ragger_duck.embedding.SentenceTransformer.set_output"]], "set_params() (ragger_duck.embedding.sentencetransformer method)": [[5, "ragger_duck.embedding.SentenceTransformer.set_params"]], "transform() (ragger_duck.embedding.sentencetransformer method)": [[5, "ragger_duck.embedding.SentenceTransformer.transform"]], "apipromptingstrategy (class in ragger_duck.prompt)": [[6, "ragger_duck.prompt.APIPromptingStrategy"]], "get_metadata_routing() (ragger_duck.prompt.apipromptingstrategy method)": [[6, "ragger_duck.prompt.APIPromptingStrategy.get_metadata_routing"]], "get_params() (ragger_duck.prompt.apipromptingstrategy method)": [[6, "ragger_duck.prompt.APIPromptingStrategy.get_params"]], "set_params() (ragger_duck.prompt.apipromptingstrategy method)": [[6, "ragger_duck.prompt.APIPromptingStrategy.set_params"]], "bm25retriever (class in ragger_duck.retrieval)": [[7, "ragger_duck.retrieval.BM25Retriever"]], "fit() (ragger_duck.retrieval.bm25retriever method)": [[7, "ragger_duck.retrieval.BM25Retriever.fit"]], "get_metadata_routing() (ragger_duck.retrieval.bm25retriever method)": [[7, "ragger_duck.retrieval.BM25Retriever.get_metadata_routing"]], "get_params() (ragger_duck.retrieval.bm25retriever method)": [[7, "ragger_duck.retrieval.BM25Retriever.get_params"]], "query() (ragger_duck.retrieval.bm25retriever method)": [[7, "ragger_duck.retrieval.BM25Retriever.query"]], "set_params() (ragger_duck.retrieval.bm25retriever method)": [[7, "ragger_duck.retrieval.BM25Retriever.set_params"]], "retrieverreranker (class in ragger_duck.retrieval)": [[8, "ragger_duck.retrieval.RetrieverReranker"]], "fit() (ragger_duck.retrieval.retrieverreranker method)": [[8, "ragger_duck.retrieval.RetrieverReranker.fit"]], "get_metadata_routing() (ragger_duck.retrieval.retrieverreranker method)": [[8, "ragger_duck.retrieval.RetrieverReranker.get_metadata_routing"]], "get_params() (ragger_duck.retrieval.retrieverreranker method)": [[8, "ragger_duck.retrieval.RetrieverReranker.get_params"]], "query() (ragger_duck.retrieval.retrieverreranker method)": [[8, "ragger_duck.retrieval.RetrieverReranker.query"]], "set_params() (ragger_duck.retrieval.retrieverreranker method)": [[8, "ragger_duck.retrieval.RetrieverReranker.set_params"]], "semanticretriever (class in ragger_duck.retrieval)": [[9, "ragger_duck.retrieval.SemanticRetriever"]], "fit() (ragger_duck.retrieval.semanticretriever method)": [[9, "ragger_duck.retrieval.SemanticRetriever.fit"]], "get_metadata_routing() (ragger_duck.retrieval.semanticretriever method)": [[9, "ragger_duck.retrieval.SemanticRetriever.get_metadata_routing"]], "get_params() (ragger_duck.retrieval.semanticretriever method)": [[9, "ragger_duck.retrieval.SemanticRetriever.get_params"]], "query() (ragger_duck.retrieval.semanticretriever method)": [[9, "ragger_duck.retrieval.SemanticRetriever.query"]], "set_params() (ragger_duck.retrieval.semanticretriever method)": [[9, "ragger_duck.retrieval.SemanticRetriever.set_params"]], "apidocextractor (class in ragger_duck.scraping)": [[10, "ragger_duck.scraping.APIDocExtractor"]], "fit() (ragger_duck.scraping.apidocextractor method)": [[10, "ragger_duck.scraping.APIDocExtractor.fit"]], "fit_transform() (ragger_duck.scraping.apidocextractor method)": [[10, "ragger_duck.scraping.APIDocExtractor.fit_transform"]], "get_metadata_routing() (ragger_duck.scraping.apidocextractor method)": [[10, "ragger_duck.scraping.APIDocExtractor.get_metadata_routing"]], "get_params() (ragger_duck.scraping.apidocextractor method)": [[10, "ragger_duck.scraping.APIDocExtractor.get_params"]], "set_output() (ragger_duck.scraping.apidocextractor method)": [[10, "ragger_duck.scraping.APIDocExtractor.set_output"]], "set_params() (ragger_duck.scraping.apidocextractor method)": [[10, "ragger_duck.scraping.APIDocExtractor.set_params"]], "transform() (ragger_duck.scraping.apidocextractor method)": [[10, "ragger_duck.scraping.APIDocExtractor.transform"]], "apinumpydocextractor (class in ragger_duck.scraping)": [[11, "ragger_duck.scraping.APINumPyDocExtractor"]], "fit() (ragger_duck.scraping.apinumpydocextractor method)": [[11, "ragger_duck.scraping.APINumPyDocExtractor.fit"]], "fit_transform() (ragger_duck.scraping.apinumpydocextractor method)": [[11, "ragger_duck.scraping.APINumPyDocExtractor.fit_transform"]], "get_metadata_routing() (ragger_duck.scraping.apinumpydocextractor method)": [[11, "ragger_duck.scraping.APINumPyDocExtractor.get_metadata_routing"]], "get_params() (ragger_duck.scraping.apinumpydocextractor method)": [[11, "ragger_duck.scraping.APINumPyDocExtractor.get_params"]], "set_output() (ragger_duck.scraping.apinumpydocextractor method)": [[11, "ragger_duck.scraping.APINumPyDocExtractor.set_output"]], "set_params() (ragger_duck.scraping.apinumpydocextractor method)": [[11, "ragger_duck.scraping.APINumPyDocExtractor.set_params"]], "transform() (ragger_duck.scraping.apinumpydocextractor method)": [[11, "ragger_duck.scraping.APINumPyDocExtractor.transform"]], "ragger_duck.prompt": [[13, "module-ragger_duck.prompt"]], "ragger_duck.retrieval": [[14, "module-ragger_duck.retrieval"]], "ragger_duck.scraping": [[15, "module-ragger_duck.scraping"]]}})