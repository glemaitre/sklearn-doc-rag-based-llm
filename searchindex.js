Search.setIndex({"docnames": ["about", "auto_examples/index", "index", "install", "references/embedding", "references/generated/rag_based_llm.embedding.SentenceTransformer", "references/generated/rag_based_llm.prompt.QueryAgent", "references/generated/rag_based_llm.retrieval.BM25Retriever", "references/generated/rag_based_llm.retrieval.RetrieverReranker", "references/generated/rag_based_llm.retrieval.SemanticRetriever", "references/generated/rag_based_llm.scraping.APIDocExtractor", "references/index", "references/prompt", "references/retrieval", "references/scraping", "user_guide", "whats_new", "whats_new/v0.1"], "filenames": ["about.rst", "auto_examples/index.rst", "index.rst", "install.rst", "references/embedding.rst", "references/generated/rag_based_llm.embedding.SentenceTransformer.rst", "references/generated/rag_based_llm.prompt.QueryAgent.rst", "references/generated/rag_based_llm.retrieval.BM25Retriever.rst", "references/generated/rag_based_llm.retrieval.RetrieverReranker.rst", "references/generated/rag_based_llm.retrieval.SemanticRetriever.rst", "references/generated/rag_based_llm.scraping.APIDocExtractor.rst", "references/index.rst", "references/prompt.rst", "references/retrieval.rst", "references/scraping.rst", "user_guide.rst", "whats_new.rst", "whats_new/v0.1.rst"], "titles": ["About us", "Examples", "sklearn-doc-rag-based-llm documentation", "Getting Started", "Embedding", "SentenceTransformer", "QueryAgent", "BM25Retriever", "RetrieverReranker", "SemanticRetriever", "APIDocExtractor", "API reference", "Prompt", "Retrieval", "Scraping the documentation", "User guide: contents", "Release history", "Version 0.1"], "terms": {"thi": [0, 2, 3, 5, 7, 8, 9, 10, 11], "i": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 15], "sundai": [0, 3], "afternoon": [0, 3], "project": [0, 2, 3], "One": [1, 15], "dai": [1, 15], "write": [1, 15], "some": [1, 2, 3], "right": 1, "now": 1, "someth": [1, 15], "locat": 1, "script": [1, 3], "folder": [1, 3, 10], "date": 2, "dec": 2, "15": 2, "2023": 2, "version": [2, 3, 5, 10], "us": [2, 5, 7, 8, 9, 10], "link": 2, "sourc": [2, 10], "repositori": [2, 3, 5], "issu": 2, "idea": 2, "The": [2, 4, 5, 7, 8, 9, 10, 14], "provid": [2, 3], "set": [2, 5, 7, 8, 9, 10], "tool": 2, "build": [2, 9], "answer": 2, "question": 2, "about": 2, "scikit": [2, 5, 9, 14], "learn": [2, 5, 9, 14], "librari": [2, 3, 9], "get": [2, 5, 7, 8, 9, 10], "start": 2, "check": [2, 3, 5, 7, 8, 9, 10], "out": 2, "guid": [2, 5, 7, 8, 9, 10], "instal": [2, 3], "rag_based_llm": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14], "extra": 2, "inform": [2, 5, 7, 8, 9, 10], "new": 2, "contribut": 2, "also": [2, 3], "To": 2, "guidelin": 2, "user": [2, 3, 5, 7, 8, 9, 10], "depth": 2, "kei": [2, 5], "concept": 2, "background": 2, "explan": 2, "api": [2, 5, 9, 10], "refer": 2, "contain": [2, 4, 5, 7, 8, 9, 10, 14], "detail": 2, "descript": 2, "avail": 2, "exampl": [2, 5, 10], "galleri": 2, "good": 2, "place": 2, "see": [2, 5, 10], "action": 2, "select": 2, "an": [2, 3, 5, 9, 10], "dive": 2, "sinc": 3, "yet": 3, "wai": 3, "packag": [3, 11], "easi": 3, "dirti": 3, "add": 3, "your": 3, "path": [3, 5, 10], "moment": 3, "import": 3, "sy": 3, "path_to_packag": 3, "append": 3, "you": 3, "can": [3, 5, 10], "file": 3, "requir": 3, "txt": 3, "we": [3, 9], "environ": 3, "yml": 3, "conda": 3, "might": 3, "want": 3, "which": 3, "ar": [3, 5, 7, 8, 9, 10], "take": 3, "profit": 3, "gpu": [3, 5], "acceler": 3, "did": 3, "commit": 3, "model": [3, 5], "exp": 3, "py": [3, 5, 10], "expect": [3, 9], "llm": [3, 6], "modul": [4, 5, 14], "function": [4, 10, 14], "emb": [4, 5, 9], "transform": [4, 5, 7, 9, 10], "allow": 4, "text": [4, 5, 7, 10], "class": [5, 6, 7, 8, 9, 10], "embed": [5, 7, 9, 11], "model_name_or_path": 5, "none": [5, 7, 8, 9, 10], "devic": 5, "cache_fold": 5, "use_auth_token": 5, "batch_siz": 5, "32": 5, "show_progress_bar": 5, "true": [5, 7, 8, 9, 10], "sentenc": [5, 9], "thin": 5, "wrapper": 5, "around": 5, "sentence_transform": [5, 8], "follow": [5, 8, 9], "thu": 5, "insid": 5, "pipelin": [5, 7, 8, 9, 10], "paramet": [5, 7, 8, 9, 10], "str": [5, 7, 8, 9], "default": [5, 7, 8, 9, 10], "If": [5, 7, 8, 9, 10], "filepath": 5, "disc": 5, "load": 5, "from": [5, 7, 8, 9, 10], "first": 5, "tri": 5, "download": 5, "pre": 5, "train": [5, 7, 8, 9], "fail": 5, "construct": 5, "huggingfac": 5, "name": [5, 7, 8, 9, 10], "iter": 5, "nn": 5, "creat": [5, 9], "custom": 5, "scratch": 5, "e": 5, "g": 5, "cpu": [5, 10], "cuda": 5, "mp": 5, "should": 5, "comput": [5, 7, 8, 9], "store": 5, "bool": [5, 7, 8, 9, 10], "authent": 5, "token": 5, "privat": 5, "int": [5, 7, 8, 9, 10], "batch": 5, "size": [5, 10], "dure": 5, "whether": 5, "show": 5, "progress": [5, 16, 17], "bar": 5, "method": [5, 6, 7, 8, 9, 10], "fit": [5, 7, 8, 9, 10], "x": [5, 7, 8, 9, 10], "y": [5, 7, 8, 9, 10], "No": [5, 10], "op": [5, 10], "oper": [5, 10], "onli": [5, 10], "valid": [5, 10], "ignor": [5, 7, 8, 9, 10], "return": [5, 7, 8, 9, 10], "self": [5, 7, 8, 9, 10], "estim": [5, 7, 8, 9, 10], "fit_transform": [5, 10], "fit_param": [5, 10], "data": [5, 7, 8, 9, 10], "option": [5, 10], "arrai": [5, 10], "like": [5, 10], "shape": [5, 7, 9, 10], "n_sampl": [5, 10], "n_featur": [5, 7, 9, 10], "input": [5, 7, 8, 9, 10], "sampl": [5, 10], "n_output": [5, 10], "target": [5, 10], "valu": [5, 7, 8, 9, 10], "unsupervis": [5, 10], "dict": [5, 7, 8, 9, 10], "addit": [5, 10], "x_new": [5, 10], "ndarrai": [5, 7, 9, 10], "n_features_new": [5, 10], "get_metadata_rout": [5, 7, 8, 9, 10], "metadata": [5, 7, 8, 9, 10], "rout": [5, 7, 8, 9, 10], "object": [5, 7, 8, 9, 10], "pleas": [5, 7, 8, 9, 10], "how": [5, 7, 8, 9, 10], "mechan": [5, 7, 8, 9, 10], "work": [5, 7, 8, 9, 10], "metadatarequest": [5, 7, 8, 9, 10], "A": [5, 7, 8, 9, 10], "encapsul": [5, 7, 8, 9, 10], "get_param": [5, 7, 8, 9, 10], "deep": [5, 7, 8, 9, 10], "subobject": [5, 7, 8, 9, 10], "param": [5, 7, 8, 9, 10], "map": [5, 7, 8, 9, 10], "set_output": [5, 10], "output": [5, 10], "sphx_glr_auto_examples_miscellaneous_plot_set_output": [5, 10], "panda": [5, 10], "configur": [5, 10], "format": [5, 10], "datafram": [5, 10], "unchang": [5, 10], "instanc": [5, 7, 8, 9, 10], "set_param": [5, 7, 8, 9, 10], "simpl": [5, 7, 8, 9, 10], "well": [5, 7, 8, 9, 10], "nest": [5, 7, 8, 9, 10], "latter": [5, 7, 8, 9, 10], "have": [5, 7, 8, 9, 10], "form": [5, 7, 8, 9, 10], "compon": [5, 7, 8, 9, 10], "__": [5, 7, 8, 9, 10], "so": [5, 7, 8, 9, 10], "": [5, 7, 8, 9, 10], "possibl": [5, 7, 8, 9, 10], "updat": [5, 7, 8, 9, 10], "each": [5, 7, 8, 9, 10], "vector": [5, 7], "length": 5, "n_sentenc": [5, 7, 9], "singl": 5, "list": [5, 7, 8, 9, 10], "dictionari": [5, 10], "embedding_s": 5, "prompt": [6, 11], "retriev": [6, 7, 8, 9, 11], "count_vector": 7, "top_k": [7, 9], "1": [7, 9], "b": 7, "0": 7, "75": 7, "k1": 7, "6": 7, "k": [7, 9], "nearest": [7, 9], "neighbor": [7, 9], "lexic": [7, 8], "search": [7, 8], "base": [7, 8], "bm25": 7, "count": 7, "term": 7, "document": [7, 8, 9, 10, 11], "sklearn": 7, "feature_extract": 7, "countvector": 7, "number": [7, 8, 9, 10], "attribut": [7, 9], "x_fit_": [7, 9], "x_embedded_": [7, 9], "vocabulari": [7, 8], "idf": [7, 8], "queri": [7, 8, 9], "most": [7, 8, 9], "relev": [7, 8, 9], "semantic_retriev": 8, "lexical_retriev": 8, "cross_encod": 8, "min_top_k": 8, "max_top_k": 8, "threshold": 8, "hybrid": 8, "semant": [8, 9], "cross": 8, "encod": 8, "rerank": 8, "context": 8, "crossencod": 8, "result": 8, "minimum": 8, "less": 8, "than": 8, "maximum": 8, "all": 8, "float": 8, "filter": 8, "score": 8, "note": 8, "lexical_queri": 8, "semantic_queri": 8, "specif": 8, "index": 9, "faiss": 9, "inner": 9, "product": 9, "cosin": 9, "similar": 9, "mean": 9, "normal": 9, "scrape": [10, 11], "chunk_siz": 10, "300": 10, "chunk_overlap": 10, "50": 10, "n_job": 10, "extract": 10, "process": 10, "chunk": 10, "split": 10, "overlap": 10, "between": 10, "two": 10, "consecut": 10, "job": 10, "run": 10, "parallel": 10, "core": 10, "pathlib": 10, "gener": 10, "full": 11, "apidocextractor": 11, "sentencetransform": 11, "bm25retriev": 11, "retrieverrerank": 11, "semanticretriev": 11, "queryag": 11, "websit": 14, "here": 15, "In": [16, 17]}, "objects": {"rag_based_llm": [[4, 0, 0, "-", "embedding"], [12, 0, 0, "-", "prompt"], [13, 0, 0, "-", "retrieval"], [14, 0, 0, "-", "scraping"]], "rag_based_llm.embedding": [[5, 1, 1, "", "SentenceTransformer"]], "rag_based_llm.embedding.SentenceTransformer": [[5, 2, 1, "", "fit"], [5, 2, 1, "", "fit_transform"], [5, 2, 1, "", "get_metadata_routing"], [5, 2, 1, "", "get_params"], [5, 2, 1, "", "set_output"], [5, 2, 1, "", "set_params"], [5, 2, 1, "", "transform"]], "rag_based_llm.prompt": [[6, 1, 1, "", "QueryAgent"]], "rag_based_llm.retrieval": [[7, 1, 1, "", "BM25Retriever"], [8, 1, 1, "", "RetrieverReranker"], [9, 1, 1, "", "SemanticRetriever"]], "rag_based_llm.retrieval.BM25Retriever": [[7, 2, 1, "", "fit"], [7, 2, 1, "", "get_metadata_routing"], [7, 2, 1, "", "get_params"], [7, 2, 1, "", "query"], [7, 2, 1, "", "set_params"]], "rag_based_llm.retrieval.RetrieverReranker": [[8, 2, 1, "", "fit"], [8, 2, 1, "", "get_metadata_routing"], [8, 2, 1, "", "get_params"], [8, 2, 1, "", "query"], [8, 2, 1, "", "set_params"]], "rag_based_llm.retrieval.SemanticRetriever": [[9, 2, 1, "", "fit"], [9, 2, 1, "", "get_metadata_routing"], [9, 2, 1, "", "get_params"], [9, 2, 1, "", "query"], [9, 2, 1, "", "set_params"]], "rag_based_llm.scraping": [[10, 1, 1, "", "APIDocExtractor"]], "rag_based_llm.scraping.APIDocExtractor": [[10, 2, 1, "", "fit"], [10, 2, 1, "", "fit_transform"], [10, 2, 1, "", "get_metadata_routing"], [10, 2, 1, "", "get_params"], [10, 2, 1, "", "set_output"], [10, 2, 1, "", "set_params"], [10, 2, 1, "", "transform"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"]}, "titleterms": {"about": 0, "u": 0, "exampl": 1, "sklearn": 2, "doc": 2, "rag": 2, "base": 2, "llm": 2, "document": [2, 14], "get": 3, "start": 3, "embed": 4, "sentencetransform": 5, "queryag": 6, "bm25retriev": 7, "retrieverrerank": 8, "semanticretriev": 9, "apidocextractor": 10, "api": 11, "refer": 11, "prompt": 12, "retriev": 13, "scrape": 14, "user": 15, "guid": 15, "releas": 16, "histori": 16, "version": [16, 17], "0": [16, 17], "1": [16, 17], "changelog": [16, 17]}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"About us": [[0, "about-us"]], "Examples": [[1, "examples"]], "sklearn-doc-rag-based-llm documentation": [[2, "sklearn-doc-rag-based-llm-documentation"]], "Getting Started": [[3, "getting-started"]], "Embedding": [[4, "module-rag_based_llm.embedding"]], "SentenceTransformer": [[5, "sentencetransformer"]], "QueryAgent": [[6, "queryagent"]], "BM25Retriever": [[7, "bm25retriever"]], "RetrieverReranker": [[8, "retrieverreranker"]], "SemanticRetriever": [[9, "semanticretriever"]], "APIDocExtractor": [[10, "apidocextractor"]], "API reference": [[11, "api-reference"]], "Prompt": [[12, "module-rag_based_llm.prompt"]], "Retrieval": [[13, "module-rag_based_llm.retrieval"]], "Scraping the documentation": [[14, "module-rag_based_llm.scraping"]], "User Guide": [[15, "user-guide"]], "Release history": [[16, "release-history"]], "Version 0.1": [[16, "version-0-1"], [17, "version-0-1"]], "Changelog": [[16, "changelog"], [17, "changelog"]]}, "indexentries": {"module": [[4, "module-rag_based_llm.embedding"], [12, "module-rag_based_llm.prompt"], [13, "module-rag_based_llm.retrieval"], [14, "module-rag_based_llm.scraping"]], "rag_based_llm.embedding": [[4, "module-rag_based_llm.embedding"]], "sentencetransformer (class in rag_based_llm.embedding)": [[5, "rag_based_llm.embedding.SentenceTransformer"]], "fit() (rag_based_llm.embedding.sentencetransformer method)": [[5, "rag_based_llm.embedding.SentenceTransformer.fit"]], "fit_transform() (rag_based_llm.embedding.sentencetransformer method)": [[5, "rag_based_llm.embedding.SentenceTransformer.fit_transform"]], "get_metadata_routing() (rag_based_llm.embedding.sentencetransformer method)": [[5, "rag_based_llm.embedding.SentenceTransformer.get_metadata_routing"]], "get_params() (rag_based_llm.embedding.sentencetransformer method)": [[5, "rag_based_llm.embedding.SentenceTransformer.get_params"]], "set_output() (rag_based_llm.embedding.sentencetransformer method)": [[5, "rag_based_llm.embedding.SentenceTransformer.set_output"]], "set_params() (rag_based_llm.embedding.sentencetransformer method)": [[5, "rag_based_llm.embedding.SentenceTransformer.set_params"]], "transform() (rag_based_llm.embedding.sentencetransformer method)": [[5, "rag_based_llm.embedding.SentenceTransformer.transform"]], "queryagent (class in rag_based_llm.prompt)": [[6, "rag_based_llm.prompt.QueryAgent"]], "bm25retriever (class in rag_based_llm.retrieval)": [[7, "rag_based_llm.retrieval.BM25Retriever"]], "fit() (rag_based_llm.retrieval.bm25retriever method)": [[7, "rag_based_llm.retrieval.BM25Retriever.fit"]], "get_metadata_routing() (rag_based_llm.retrieval.bm25retriever method)": [[7, "rag_based_llm.retrieval.BM25Retriever.get_metadata_routing"]], "get_params() (rag_based_llm.retrieval.bm25retriever method)": [[7, "rag_based_llm.retrieval.BM25Retriever.get_params"]], "query() (rag_based_llm.retrieval.bm25retriever method)": [[7, "rag_based_llm.retrieval.BM25Retriever.query"]], "set_params() (rag_based_llm.retrieval.bm25retriever method)": [[7, "rag_based_llm.retrieval.BM25Retriever.set_params"]], "retrieverreranker (class in rag_based_llm.retrieval)": [[8, "rag_based_llm.retrieval.RetrieverReranker"]], "fit() (rag_based_llm.retrieval.retrieverreranker method)": [[8, "rag_based_llm.retrieval.RetrieverReranker.fit"]], "get_metadata_routing() (rag_based_llm.retrieval.retrieverreranker method)": [[8, "rag_based_llm.retrieval.RetrieverReranker.get_metadata_routing"]], "get_params() (rag_based_llm.retrieval.retrieverreranker method)": [[8, "rag_based_llm.retrieval.RetrieverReranker.get_params"]], "query() (rag_based_llm.retrieval.retrieverreranker method)": [[8, "rag_based_llm.retrieval.RetrieverReranker.query"]], "set_params() (rag_based_llm.retrieval.retrieverreranker method)": [[8, "rag_based_llm.retrieval.RetrieverReranker.set_params"]], "semanticretriever (class in rag_based_llm.retrieval)": [[9, "rag_based_llm.retrieval.SemanticRetriever"]], "fit() (rag_based_llm.retrieval.semanticretriever method)": [[9, "rag_based_llm.retrieval.SemanticRetriever.fit"]], "get_metadata_routing() (rag_based_llm.retrieval.semanticretriever method)": [[9, "rag_based_llm.retrieval.SemanticRetriever.get_metadata_routing"]], "get_params() (rag_based_llm.retrieval.semanticretriever method)": [[9, "rag_based_llm.retrieval.SemanticRetriever.get_params"]], "query() (rag_based_llm.retrieval.semanticretriever method)": [[9, "rag_based_llm.retrieval.SemanticRetriever.query"]], "set_params() (rag_based_llm.retrieval.semanticretriever method)": [[9, "rag_based_llm.retrieval.SemanticRetriever.set_params"]], "apidocextractor (class in rag_based_llm.scraping)": [[10, "rag_based_llm.scraping.APIDocExtractor"]], "fit() (rag_based_llm.scraping.apidocextractor method)": [[10, "rag_based_llm.scraping.APIDocExtractor.fit"]], "fit_transform() (rag_based_llm.scraping.apidocextractor method)": [[10, "rag_based_llm.scraping.APIDocExtractor.fit_transform"]], "get_metadata_routing() (rag_based_llm.scraping.apidocextractor method)": [[10, "rag_based_llm.scraping.APIDocExtractor.get_metadata_routing"]], "get_params() (rag_based_llm.scraping.apidocextractor method)": [[10, "rag_based_llm.scraping.APIDocExtractor.get_params"]], "set_output() (rag_based_llm.scraping.apidocextractor method)": [[10, "rag_based_llm.scraping.APIDocExtractor.set_output"]], "set_params() (rag_based_llm.scraping.apidocextractor method)": [[10, "rag_based_llm.scraping.APIDocExtractor.set_params"]], "transform() (rag_based_llm.scraping.apidocextractor method)": [[10, "rag_based_llm.scraping.APIDocExtractor.transform"]], "rag_based_llm.prompt": [[12, "module-rag_based_llm.prompt"]], "rag_based_llm.retrieval": [[13, "module-rag_based_llm.retrieval"]], "rag_based_llm.scraping": [[14, "module-rag_based_llm.scraping"]]}})