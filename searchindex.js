Search.setIndex({"docnames": ["about", "auto_examples/index", "index", "install", "references/embedding", "references/generated/ragger_duck.embedding.SentenceTransformer", "references/generated/ragger_duck.retrieval.BM25Retriever", "references/generated/ragger_duck.retrieval.RetrieverReranker", "references/generated/ragger_duck.retrieval.SemanticRetriever", "references/generated/ragger_duck.scraping.APIDocExtractor", "references/generated/ragger_duck.scraping.APINumPyDocExtractor", "references/index", "references/prompt", "references/retrieval", "references/scraping", "user_guide", "whats_new", "whats_new/v0.1"], "filenames": ["about.rst", "auto_examples/index.rst", "index.rst", "install.rst", "references/embedding.rst", "references/generated/ragger_duck.embedding.SentenceTransformer.rst", "references/generated/ragger_duck.retrieval.BM25Retriever.rst", "references/generated/ragger_duck.retrieval.RetrieverReranker.rst", "references/generated/ragger_duck.retrieval.SemanticRetriever.rst", "references/generated/ragger_duck.scraping.APIDocExtractor.rst", "references/generated/ragger_duck.scraping.APINumPyDocExtractor.rst", "references/index.rst", "references/prompt.rst", "references/retrieval.rst", "references/scraping.rst", "user_guide.rst", "whats_new.rst", "whats_new/v0.1.rst"], "titles": ["About us", "Examples", "Ragger Duck documentation", "Getting Started", "Embedding", "SentenceTransformer", "BM25Retriever", "RetrieverReranker", "SemanticRetriever", "APIDocExtractor", "APINumPyDocExtractor", "API reference", "Prompt", "Retrieval", "Scraping the documentation", "User guide: contents", "Release history", "Version 0.1"], "terms": {"thi": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11], "i": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 15], "sundai": [0, 3], "afternoon": [0, 3], "project": [0, 2, 3, 15], "One": [1, 15], "dai": 1, "write": 1, "some": [1, 2, 15], "right": [1, 7], "now": 1, "someth": 1, "locat": [1, 3], "script": [1, 3], "folder": [1, 3, 9, 10], "date": 2, "dec": 2, "22": 2, "2023": 2, "version": [2, 5, 9, 10], "us": [2, 5, 6, 7, 8, 9, 10, 15], "link": [2, 3], "sourc": [2, 3, 9, 10], "repositori": [2, 3, 5], "issu": 2, "idea": [2, 15], "sklearn": [2, 6], "The": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15], "provid": [2, 3, 15], "set": [2, 5, 6, 7, 8, 9, 10], "tool": 2, "build": [2, 8, 15], "rag": 2, "answer": [2, 15], "question": [2, 15], "about": 2, "scikit": [2, 5, 8, 14], "learn": [2, 5, 8, 14], "librari": [2, 8], "get": [2, 5, 6, 7, 8, 9, 10, 15], "start": 2, "check": [2, 3, 5, 6, 7, 8, 9, 10], "out": 2, "guid": [2, 5, 6, 7, 8, 9, 10], "instal": [2, 3], "extra": 2, "inform": [2, 5, 6, 7, 8, 9, 10, 15], "new": 2, "contribut": 2, "also": 2, "To": [2, 3], "guidelin": 2, "user": [2, 5, 6, 7, 8, 9, 10], "depth": 2, "kei": [2, 5], "concept": 2, "background": 2, "explan": 2, "api": [2, 3, 5, 8, 9, 10], "refer": [2, 3, 15], "contain": [2, 4, 5, 6, 7, 8, 9, 10, 14, 15], "detail": 2, "descript": 2, "avail": [2, 3, 15], "exampl": [2, 5, 9, 10], "galleri": 2, "good": 2, "place": 2, "see": [2, 5, 9, 10], "action": 2, "select": 2, "an": [2, 3, 5, 8, 9, 10, 15], "dive": 2, "sinc": [3, 15], "yet": 3, "wai": [3, 15], "packag": [3, 11], "easi": 3, "dirti": 3, "add": 3, "your": 3, "path": [3, 5, 9, 10], "moment": 3, "import": 3, "sy": 3, "path_to_packag": 3, "ragger_duck": [3, 4, 5, 6, 7, 8, 9, 10, 11, 14], "append": 3, "you": 3, "can": [3, 5, 9, 10, 15], "file": 3, "requir": 3, "txt": 3, "we": [3, 8, 15], "don": [3, 15], "t": [3, 15], "gpu": [3, 5], "enabl": 3, "eas": 3, "deploy": 3, "reli": [3, 15], "pixi": 3, "follow": [3, 5, 7, 8], "In": [3, 15, 16, 17], "latest": 3, "stage": 3, "charg": 3, "creat": [3, 5, 8], "python": 3, "environ": 3, "Then": [3, 15], "step": [3, 7], "current": 3, "onli": [3, 5, 9, 10, 15], "support": 3, "singl": [3, 5], "so": [3, 5, 6, 7, 8, 9, 10], "cpu": [3, 5, 9], "If": [3, 5, 6, 7, 8, 9, 10, 15], "want": 3, "need": [3, 15], "yourself": 3, "first": [3, 5], "have": [3, 5, 6, 7, 8, 9, 10, 15], "html": [3, 15], "clone": 3, "doc": 3, "_build": 3, "stabl": 3, "modul": [3, 4, 5, 14, 15], "gener": 3, "search": [3, 6, 7, 15], "context": [3, 7, 15], "modifi": 3, "configur": [3, 5, 9, 10], "py": [3, 5, 9, 10], "specifi": 3, "For": 3, "let": 3, "other": 3, "variabl": 3, "run": [3, 9], "command": 3, "from": [3, 5, 6, 7, 8, 9, 10, 15], "root": 3, "llm": [3, 15], "test": 3, "purpos": 3, "mistral": 3, "7b": 3, "instruct": 3, "v0": 3, "1": [3, 6, 8], "q6_k": 3, "gguf": 3, "befor": 3, "app": 3, "default": [3, 5, 6, 7, 8, 9, 10], "access": 3, "address": 3, "http": 3, "localhost": 3, "8123": 3, "function": [4, 9, 10, 14, 15], "emb": [4, 5, 8], "transform": [4, 5, 6, 8, 9, 10, 15], "allow": 4, "text": [4, 5, 6, 9, 10], "class": [5, 6, 7, 8, 9, 10, 15], "embed": [5, 6, 8, 11, 15], "model_name_or_path": 5, "none": [5, 6, 7, 8, 9, 10], "devic": 5, "cache_fold": 5, "use_auth_token": 5, "batch_siz": 5, "32": 5, "show_progress_bar": 5, "true": [5, 6, 7, 8, 9, 10], "sentenc": [5, 8, 15], "thin": 5, "wrapper": 5, "around": 5, "sentence_transform": [5, 7], "thu": 5, "insid": 5, "pipelin": [5, 6, 7, 8, 9, 10], "paramet": [5, 6, 7, 8, 9, 10, 15], "str": [5, 6, 7, 8], "filepath": 5, "disc": 5, "load": [5, 15], "model": [5, 15], "tri": 5, "download": [5, 15], "pre": [5, 15], "train": [5, 6, 7, 8, 15], "fail": 5, "construct": 5, "huggingfac": [5, 15], "name": [5, 6, 7, 8, 9, 10, 15], "iter": 5, "nn": 5, "custom": 5, "scratch": 5, "e": 5, "g": 5, "cuda": 5, "mp": 5, "should": 5, "comput": [5, 6, 7, 8], "store": 5, "bool": [5, 6, 7, 8, 9, 10], "authent": 5, "token": 5, "privat": 5, "int": [5, 6, 7, 8, 9], "batch": 5, "size": [5, 9, 15], "dure": [5, 15], "whether": [5, 7], "show": 5, "progress": [5, 16, 17], "bar": 5, "method": [5, 6, 7, 8, 9, 10], "fit": [5, 6, 7, 8, 9, 10], "x": [5, 6, 7, 8, 9, 10], "y": [5, 6, 7, 8, 9, 10], "No": [5, 9, 10], "op": [5, 9, 10], "oper": [5, 9, 10], "valid": [5, 9, 10], "ignor": [5, 6, 7, 8, 9, 10], "return": [5, 6, 7, 8, 9, 10], "self": [5, 6, 7, 8, 9, 10], "estim": [5, 6, 7, 8, 9, 10, 15], "fit_transform": [5, 9, 10], "fit_param": [5, 9, 10], "data": [5, 6, 7, 8, 9, 10], "option": [5, 9, 10], "arrai": [5, 9, 10], "like": [5, 9, 10], "shape": [5, 6, 8, 9, 10], "n_sampl": [5, 9, 10], "n_featur": [5, 6, 8, 9, 10], "input": [5, 6, 7, 8, 9, 10], "sampl": [5, 9, 10], "n_output": [5, 9, 10], "target": [5, 9, 10], "valu": [5, 6, 7, 8, 9, 10], "unsupervis": [5, 9, 10], "dict": [5, 6, 7, 8, 9, 10], "addit": [5, 9, 10], "x_new": [5, 9, 10], "ndarrai": [5, 6, 8, 9, 10], "n_features_new": [5, 9, 10], "get_metadata_rout": [5, 6, 7, 8, 9, 10], "metadata": [5, 6, 7, 8, 9, 10], "rout": [5, 6, 7, 8, 9, 10], "object": [5, 6, 7, 8, 9, 10], "pleas": [5, 6, 7, 8, 9, 10], "how": [5, 6, 7, 8, 9, 10], "mechan": [5, 6, 7, 8, 9, 10], "work": [5, 6, 7, 8, 9, 10], "metadatarequest": [5, 6, 7, 8, 9, 10], "A": [5, 6, 7, 8, 9, 10], "encapsul": [5, 6, 7, 8, 9, 10], "get_param": [5, 6, 7, 8, 9, 10], "deep": [5, 6, 7, 8, 9, 10], "subobject": [5, 6, 7, 8, 9, 10], "ar": [5, 6, 7, 8, 9, 10, 15], "param": [5, 6, 7, 8, 9, 10], "map": [5, 6, 7, 8, 9, 10], "set_output": [5, 9, 10], "output": [5, 9, 10], "sphx_glr_auto_examples_miscellaneous_plot_set_output": [5, 9, 10], "panda": [5, 9, 10], "format": [5, 9, 10, 15], "datafram": [5, 9, 10], "unchang": [5, 9, 10], "instanc": [5, 6, 7, 8, 9, 10], "set_param": [5, 6, 7, 8, 9, 10], "simpl": [5, 6, 7, 8, 9, 10, 15], "well": [5, 6, 7, 8, 9, 10], "nest": [5, 6, 7, 8, 9, 10], "latter": [5, 6, 7, 8, 9, 10], "form": [5, 6, 7, 8, 9, 10], "compon": [5, 6, 7, 8, 9, 10], "__": [5, 6, 7, 8, 9, 10], "": [5, 6, 7, 8, 9, 10], "possibl": [5, 6, 7, 8, 9, 10], "updat": [5, 6, 7, 8, 9, 10], "each": [5, 6, 7, 8, 9, 10, 15], "vector": [5, 6, 15], "length": 5, "n_sentenc": [5, 6, 8], "list": [5, 6, 7, 8, 9, 10], "dictionari": [5, 9, 10], "embedding_s": 5, "retriev": [6, 7, 8, 11], "count_vector": 6, "top_k": [6, 8], "b": 6, "0": 6, "75": 6, "k1": 6, "6": 6, "k": [6, 8], "nearest": [6, 8, 15], "neighbor": [6, 8, 15], "lexic": [6, 7], "base": [6, 7], "bm25": 6, "count": 6, "term": 6, "document": [6, 7, 8, 9, 10, 11], "feature_extract": 6, "countvector": [6, 15], "number": [6, 7, 8, 9], "attribut": [6, 8, 9], "x_fit_": [6, 8], "x_embedded_": [6, 8], "vocabulari": [6, 7, 15], "idf": [6, 7, 15], "queri": [6, 7, 8, 15], "most": [6, 7, 8], "relev": [6, 7, 8], "semantic_retriev": 7, "lexical_retriev": 7, "cross_encod": 7, "min_top_k": 7, "max_top_k": 7, "threshold": 7, "drop_dupl": 7, "hybrid": 7, "semant": [7, 8], "cross": [7, 15], "encod": [7, 15], "rerank": 7, "crossencod": 7, "result": [7, 15], "minimum": 7, "less": 7, "than": [7, 15], "maximum": 7, "all": 7, "float": 7, "filter": 7, "score": [7, 15], "note": 7, "drop": 7, "duplic": 7, "done": 7, "after": 7, "lexical_queri": 7, "semantic_queri": 7, "specif": [7, 15], "index": 8, "faiss": [8, 15], "inner": 8, "product": 8, "cosin": 8, "similar": [8, 15], "mean": 8, "expect": [8, 15], "normal": 8, "scrape": [9, 10, 11], "chunk_siz": [9, 15], "300": 9, "chunk_overlap": [9, 15], "50": 9, "n_job": 9, "extract": [9, 10, 15], "process": [9, 10], "chunk": [9, 15], "split": [9, 15], "overlap": 9, "between": [9, 15], "two": [9, 15], "consecut": 9, "job": 9, "parallel": 9, "core": 9, "text_splitter_": 9, "langchain": 9, "text_splitt": 9, "recursivecharactertextsplitt": 9, "splitter": 9, "pathlib": [9, 10], "numpydoc": [10, 15], "It": 10, "templat": 10, "full": 11, "apidocextractor": [11, 15], "apinumpydocextractor": [11, 15], "sentencetransform": [11, 15], "bm25retriev": [11, 15], "retrieverrerank": [11, 15], "semanticretriev": [11, 15], "prompt": 11, "websit": [14, 15], "meaning": 15, "scraper": 15, "page": 15, "main": 15, "section": 15, "further": 15, "smaller": 15, "more": 15, "advanc": 15, "inde": 15, "pars": 15, "differ": 15, "while": 15, "control": 15, "thei": 15, "alwai": 15, "hope": 15, "remov": 15, "ambigu": 15, "could": 15, "exist": 15, "when": 15, "without": 15, "ani": 15, "much": 15, "faster": 15, "differenti": 15, "type": 15, "exact": 15, "match": 15, "implement": 15, "tf": 15, "weight": 15, "scheme": 15, "seen": 15, "flexibl": 15, "space": 15, "databas": 15, "closest": 15, "given": 15, "approxim": 15, "algorithm": 15, "As": 15, "both": 15, "make": 15, "our": 15, "case": 15, "microsoft": 15, "bing": 15, "pair": 15, "apipromptstrategi": 15, "strategi": 15, "onc": 15, "request": 15, "larg": 15, "languag": 15}, "objects": {"ragger_duck": [[4, 0, 0, "-", "embedding"], [12, 0, 0, "-", "prompt"], [13, 0, 0, "-", "retrieval"], [14, 0, 0, "-", "scraping"]], "ragger_duck.embedding": [[5, 1, 1, "", "SentenceTransformer"]], "ragger_duck.embedding.SentenceTransformer": [[5, 2, 1, "", "fit"], [5, 2, 1, "", "fit_transform"], [5, 2, 1, "", "get_metadata_routing"], [5, 2, 1, "", "get_params"], [5, 2, 1, "", "set_output"], [5, 2, 1, "", "set_params"], [5, 2, 1, "", "transform"]], "ragger_duck.retrieval": [[6, 1, 1, "", "BM25Retriever"], [7, 1, 1, "", "RetrieverReranker"], [8, 1, 1, "", "SemanticRetriever"]], "ragger_duck.retrieval.BM25Retriever": [[6, 2, 1, "", "fit"], [6, 2, 1, "", "get_metadata_routing"], [6, 2, 1, "", "get_params"], [6, 2, 1, "", "query"], [6, 2, 1, "", "set_params"]], "ragger_duck.retrieval.RetrieverReranker": [[7, 2, 1, "", "fit"], [7, 2, 1, "", "get_metadata_routing"], [7, 2, 1, "", "get_params"], [7, 2, 1, "", "query"], [7, 2, 1, "", "set_params"]], "ragger_duck.retrieval.SemanticRetriever": [[8, 2, 1, "", "fit"], [8, 2, 1, "", "get_metadata_routing"], [8, 2, 1, "", "get_params"], [8, 2, 1, "", "query"], [8, 2, 1, "", "set_params"]], "ragger_duck.scraping": [[9, 1, 1, "", "APIDocExtractor"], [10, 1, 1, "", "APINumPyDocExtractor"]], "ragger_duck.scraping.APIDocExtractor": [[9, 2, 1, "", "fit"], [9, 2, 1, "", "fit_transform"], [9, 2, 1, "", "get_metadata_routing"], [9, 2, 1, "", "get_params"], [9, 2, 1, "", "set_output"], [9, 2, 1, "", "set_params"], [9, 2, 1, "", "transform"]], "ragger_duck.scraping.APINumPyDocExtractor": [[10, 2, 1, "", "fit"], [10, 2, 1, "", "fit_transform"], [10, 2, 1, "", "get_metadata_routing"], [10, 2, 1, "", "get_params"], [10, 2, 1, "", "set_output"], [10, 2, 1, "", "set_params"], [10, 2, 1, "", "transform"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"]}, "titleterms": {"about": 0, "u": 0, "exampl": 1, "ragger": [2, 3], "duck": [2, 3], "document": [2, 3, 14, 15], "get": 3, "start": 3, "us": 3, "librari": 3, "deploi": 3, "web": 3, "consol": 3, "build": 3, "scikit": 3, "learn": 3, "train": 3, "semant": [3, 15], "lexic": [3, 15], "retriev": [3, 13, 15], "download": 3, "larg": 3, "languag": 3, "model": 3, "launch": 3, "embed": 4, "sentencetransform": 5, "bm25retriev": 6, "retrieverrerank": 7, "semanticretriev": 8, "apidocextractor": 9, "apinumpydocextractor": 10, "api": [11, 15], "refer": 11, "prompt": [12, 15], "scrape": [14, 15], "user": 15, "guid": 15, "rerank": 15, "merg": 15, "releas": 16, "histori": 16, "version": [16, 17], "0": [16, 17], "1": [16, 17], "changelog": [16, 17]}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"About us": [[0, "about-us"]], "Examples": [[1, "examples"]], "Ragger Duck documentation": [[2, "ragger-duck-documentation"]], "Getting Started": [[3, "getting-started"]], "Use the Ragger Duck library": [[3, "use-the-ragger-duck-library"]], "Deploy Ragger Duck Web Console": [[3, "deploy-ragger-duck-web-console"]], "Build the scikit-learn documentation": [[3, "build-the-scikit-learn-documentation"]], "Train the semantic and lexical retrievers": [[3, "train-the-semantic-and-lexical-retrievers"]], "Download the Large Language Model": [[3, "download-the-large-language-model"]], "Launch the Web Console": [[3, "launch-the-web-console"]], "Embedding": [[4, "module-ragger_duck.embedding"]], "SentenceTransformer": [[5, "sentencetransformer"]], "BM25Retriever": [[6, "bm25retriever"]], "RetrieverReranker": [[7, "retrieverreranker"]], "SemanticRetriever": [[8, "semanticretriever"]], "APIDocExtractor": [[9, "apidocextractor"]], "APINumPyDocExtractor": [[10, "apinumpydocextractor"]], "API reference": [[11, "api-reference"]], "Prompt": [[12, "module-ragger_duck.prompt"]], "Retrieval": [[13, "module-ragger_duck.retrieval"]], "Scraping the documentation": [[14, "module-ragger_duck.scraping"]], "User Guide": [[15, "user-guide"]], "Scraping": [[15, "scraping"]], "Retriever": [[15, "retriever"]], "Lexical retrievers": [[15, "lexical-retrievers"]], "Semantical retrievers": [[15, "semantical-retrievers"]], "Reranker: merging lexical and semantical retrievers": [[15, "reranker-merging-lexical-and-semantical-retrievers"]], "Prompting": [[15, "prompting"]], "Prompting for API documentation": [[15, "prompting-for-api-documentation"]], "Release history": [[16, "release-history"]], "Version 0.1": [[16, "version-0-1"], [17, "version-0-1"]], "Changelog": [[16, "changelog"], [17, "changelog"]]}, "indexentries": {"module": [[4, "module-ragger_duck.embedding"], [12, "module-ragger_duck.prompt"], [13, "module-ragger_duck.retrieval"], [14, "module-ragger_duck.scraping"]], "ragger_duck.embedding": [[4, "module-ragger_duck.embedding"]], "sentencetransformer (class in ragger_duck.embedding)": [[5, "ragger_duck.embedding.SentenceTransformer"]], "fit() (ragger_duck.embedding.sentencetransformer method)": [[5, "ragger_duck.embedding.SentenceTransformer.fit"]], "fit_transform() (ragger_duck.embedding.sentencetransformer method)": [[5, "ragger_duck.embedding.SentenceTransformer.fit_transform"]], "get_metadata_routing() (ragger_duck.embedding.sentencetransformer method)": [[5, "ragger_duck.embedding.SentenceTransformer.get_metadata_routing"]], "get_params() (ragger_duck.embedding.sentencetransformer method)": [[5, "ragger_duck.embedding.SentenceTransformer.get_params"]], "set_output() (ragger_duck.embedding.sentencetransformer method)": [[5, "ragger_duck.embedding.SentenceTransformer.set_output"]], "set_params() (ragger_duck.embedding.sentencetransformer method)": [[5, "ragger_duck.embedding.SentenceTransformer.set_params"]], "transform() (ragger_duck.embedding.sentencetransformer method)": [[5, "ragger_duck.embedding.SentenceTransformer.transform"]], "bm25retriever (class in ragger_duck.retrieval)": [[6, "ragger_duck.retrieval.BM25Retriever"]], "fit() (ragger_duck.retrieval.bm25retriever method)": [[6, "ragger_duck.retrieval.BM25Retriever.fit"]], "get_metadata_routing() (ragger_duck.retrieval.bm25retriever method)": [[6, "ragger_duck.retrieval.BM25Retriever.get_metadata_routing"]], "get_params() (ragger_duck.retrieval.bm25retriever method)": [[6, "ragger_duck.retrieval.BM25Retriever.get_params"]], "query() (ragger_duck.retrieval.bm25retriever method)": [[6, "ragger_duck.retrieval.BM25Retriever.query"]], "set_params() (ragger_duck.retrieval.bm25retriever method)": [[6, "ragger_duck.retrieval.BM25Retriever.set_params"]], "retrieverreranker (class in ragger_duck.retrieval)": [[7, "ragger_duck.retrieval.RetrieverReranker"]], "fit() (ragger_duck.retrieval.retrieverreranker method)": [[7, "ragger_duck.retrieval.RetrieverReranker.fit"]], "get_metadata_routing() (ragger_duck.retrieval.retrieverreranker method)": [[7, "ragger_duck.retrieval.RetrieverReranker.get_metadata_routing"]], "get_params() (ragger_duck.retrieval.retrieverreranker method)": [[7, "ragger_duck.retrieval.RetrieverReranker.get_params"]], "query() (ragger_duck.retrieval.retrieverreranker method)": [[7, "ragger_duck.retrieval.RetrieverReranker.query"]], "set_params() (ragger_duck.retrieval.retrieverreranker method)": [[7, "ragger_duck.retrieval.RetrieverReranker.set_params"]], "semanticretriever (class in ragger_duck.retrieval)": [[8, "ragger_duck.retrieval.SemanticRetriever"]], "fit() (ragger_duck.retrieval.semanticretriever method)": [[8, "ragger_duck.retrieval.SemanticRetriever.fit"]], "get_metadata_routing() (ragger_duck.retrieval.semanticretriever method)": [[8, "ragger_duck.retrieval.SemanticRetriever.get_metadata_routing"]], "get_params() (ragger_duck.retrieval.semanticretriever method)": [[8, "ragger_duck.retrieval.SemanticRetriever.get_params"]], "query() (ragger_duck.retrieval.semanticretriever method)": [[8, "ragger_duck.retrieval.SemanticRetriever.query"]], "set_params() (ragger_duck.retrieval.semanticretriever method)": [[8, "ragger_duck.retrieval.SemanticRetriever.set_params"]], "apidocextractor (class in ragger_duck.scraping)": [[9, "ragger_duck.scraping.APIDocExtractor"]], "fit() (ragger_duck.scraping.apidocextractor method)": [[9, "ragger_duck.scraping.APIDocExtractor.fit"]], "fit_transform() (ragger_duck.scraping.apidocextractor method)": [[9, "ragger_duck.scraping.APIDocExtractor.fit_transform"]], "get_metadata_routing() (ragger_duck.scraping.apidocextractor method)": [[9, "ragger_duck.scraping.APIDocExtractor.get_metadata_routing"]], "get_params() (ragger_duck.scraping.apidocextractor method)": [[9, "ragger_duck.scraping.APIDocExtractor.get_params"]], "set_output() (ragger_duck.scraping.apidocextractor method)": [[9, "ragger_duck.scraping.APIDocExtractor.set_output"]], "set_params() (ragger_duck.scraping.apidocextractor method)": [[9, "ragger_duck.scraping.APIDocExtractor.set_params"]], "transform() (ragger_duck.scraping.apidocextractor method)": [[9, "ragger_duck.scraping.APIDocExtractor.transform"]], "apinumpydocextractor (class in ragger_duck.scraping)": [[10, "ragger_duck.scraping.APINumPyDocExtractor"]], "fit() (ragger_duck.scraping.apinumpydocextractor method)": [[10, "ragger_duck.scraping.APINumPyDocExtractor.fit"]], "fit_transform() (ragger_duck.scraping.apinumpydocextractor method)": [[10, "ragger_duck.scraping.APINumPyDocExtractor.fit_transform"]], "get_metadata_routing() (ragger_duck.scraping.apinumpydocextractor method)": [[10, "ragger_duck.scraping.APINumPyDocExtractor.get_metadata_routing"]], "get_params() (ragger_duck.scraping.apinumpydocextractor method)": [[10, "ragger_duck.scraping.APINumPyDocExtractor.get_params"]], "set_output() (ragger_duck.scraping.apinumpydocextractor method)": [[10, "ragger_duck.scraping.APINumPyDocExtractor.set_output"]], "set_params() (ragger_duck.scraping.apinumpydocextractor method)": [[10, "ragger_duck.scraping.APINumPyDocExtractor.set_params"]], "transform() (ragger_duck.scraping.apinumpydocextractor method)": [[10, "ragger_duck.scraping.APINumPyDocExtractor.transform"]], "ragger_duck.prompt": [[12, "module-ragger_duck.prompt"]], "ragger_duck.retrieval": [[13, "module-ragger_duck.retrieval"]], "ragger_duck.scraping": [[14, "module-ragger_duck.scraping"]]}})